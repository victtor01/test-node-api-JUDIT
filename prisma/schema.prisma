// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserStatus {
  CREATED
  DISABLED
  ACTIVATED
}

model User {
  id       String     @id @unique @default(uuid())
  name     String     @db.VarChar(120)
  email    String     @unique() @db.VarChar(60)
  password String     @db.VarChar(70)
  status   UserStatus @default(CREATED)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  lists List[]

  @@map("users")
}

model Process {
  id     String    @id @default(uuid())
  number String
  listId String

  list List @relation(fields: [listId], references: [id])

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  @@map("process")
}

model List {
  id     String @id @unique @default(uuid())
  name   String @db.VarChar(60)
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  process Process[]

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("lists")
}
